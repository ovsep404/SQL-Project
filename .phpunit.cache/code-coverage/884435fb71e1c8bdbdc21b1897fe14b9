a:6:{s:9:"classesIn";a:1:{s:48:"PHPUnit\Framework\MockObject\Generator\Generator";a:6:{s:4:"name";s:9:"Generator";s:14:"namespacedName";s:48:"PHPUnit\Framework\MockObject\Generator\Generator";s:9:"namespace";s:38:"PHPUnit\Framework\MockObject\Generator";s:9:"startLine";i:67;s:7:"endLine";i:1070;s:7:"methods";a:23:{s:10:"testDouble";a:6:{s:10:"methodName";s:10:"testDouble";s:9:"signature";s:384:"testDouble(string $type, bool $mockObject, ?array $methods, array $arguments, string $mockClassName, bool $callOriginalConstructor, bool $callOriginalClone, bool $callAutoload, bool $cloneArguments, bool $callOriginalMethods, object $proxyTarget, bool $allowMockingUnknownTypes, bool $returnValueGeneration): \PHPUnit\Framework\MockObject\MockObject|\PHPUnit\Framework\MockObject\Stub";s:10:"visibility";s:6:"public";s:9:"startLine";i:106;s:7:"endLine";i:153;s:3:"ccn";i:6;}s:34:"testDoubleForInterfaceIntersection";a:6:{s:10:"methodName";s:34:"testDoubleForInterfaceIntersection";s:9:"signature";s:168:"testDoubleForInterfaceIntersection(array $interfaces, bool $mockObject, bool $callAutoload): \PHPUnit\Framework\MockObject\MockObject|\PHPUnit\Framework\MockObject\Stub";s:10:"visibility";s:6:"public";s:9:"startLine";i:161;s:7:"endLine";i:214;s:3:"ccn";i:7;}s:26:"mockObjectForAbstractClass";a:6:{s:10:"methodName";s:26:"mockObjectForAbstractClass";s:9:"signature";s:255:"mockObjectForAbstractClass(string $originalClassName, array $arguments, string $mockClassName, bool $callOriginalConstructor, bool $callOriginalClone, bool $callAutoload, array $mockedMethods, bool $cloneArguments): PHPUnit\Framework\MockObject\MockObject";s:10:"visibility";s:6:"public";s:9:"startLine";i:237;s:7:"endLine";i:273;s:3:"ccn";i:7;}s:18:"mockObjectForTrait";a:6:{s:10:"methodName";s:18:"mockObjectForTrait";s:9:"signature";s:239:"mockObjectForTrait(string $traitName, array $arguments, string $mockClassName, bool $callOriginalConstructor, bool $callOriginalClone, bool $callAutoload, array $mockedMethods, bool $cloneArguments): PHPUnit\Framework\MockObject\MockObject";s:10:"visibility";s:6:"public";s:9:"startLine";i:298;s:7:"endLine";i:324;s:3:"ccn";i:2;}s:14:"objectForTrait";a:6:{s:10:"methodName";s:14:"objectForTrait";s:9:"signature";s:134:"objectForTrait(string $traitName, string $traitClassName, bool $callAutoload, bool $callOriginalConstructor, array $arguments): object";s:10:"visibility";s:6:"public";s:9:"startLine";i:337;s:7:"endLine";i:368;s:3:"ccn";i:2;}s:8:"generate";a:6:{s:10:"methodName";s:8:"generate";s:9:"signature";s:223:"generate(string $type, bool $mockObject, array $methods, string $mockClassName, bool $callOriginalClone, bool $callAutoload, bool $cloneArguments, bool $callOriginalMethods): PHPUnit\Framework\MockObject\Generator\MockClass";s:10:"visibility";s:6:"public";s:9:"startLine";i:381;s:7:"endLine";i:419;s:3:"ccn";i:4;}s:21:"generateClassFromWsdl";a:6:{s:10:"methodName";s:21:"generateClassFromWsdl";s:9:"signature";s:98:"generateClassFromWsdl(string $wsdlFile, string $className, array $methods, array $options): string";s:10:"visibility";s:6:"public";s:9:"startLine";i:427;s:7:"endLine";i:516;s:3:"ccn";i:10;}s:16:"mockClassMethods";a:6:{s:10:"methodName";s:16:"mockClassMethods";s:9:"signature";s:91:"mockClassMethods(string $className, bool $callOriginalMethods, bool $cloneArguments): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:523;s:7:"endLine";i:535;s:3:"ccn";i:5;}s:27:"userDefinedInterfaceMethods";a:6:{s:10:"methodName";s:27:"userDefinedInterfaceMethods";s:9:"signature";s:57:"userDefinedInterfaceMethods(string $interfaceName): array";s:10:"visibility";s:7:"private";s:9:"startLine";i:544;s:7:"endLine";i:558;s:3:"ccn";i:3;}s:9:"getObject";a:6:{s:10:"methodName";s:9:"getObject";s:9:"signature";s:217:"getObject(PHPUnit\Framework\MockObject\Generator\MockType $mockClass, string $type, bool $callOriginalConstructor, array $arguments, bool $callOriginalMethods, object $proxyTarget, bool $returnValueGeneration): object";s:10:"visibility";s:7:"private";s:9:"startLine";i:564;s:7:"endLine";i:578;s:3:"ccn";i:3;}s:30:"generateCodeForTestDoubleClass";a:6:{s:10:"methodName";s:30:"generateCodeForTestDoubleClass";s:9:"signature";s:254:"generateCodeForTestDoubleClass(string $type, bool $mockObject, ?array $explicitMethods, string $mockClassName, bool $callOriginalClone, bool $callAutoload, bool $cloneArguments, bool $callOriginalMethods): PHPUnit\Framework\MockObject\Generator\MockClass";s:10:"visibility";s:7:"private";s:9:"startLine";i:587;s:7:"endLine";i:793;s:3:"ccn";i:42;}s:17:"generateClassName";a:6:{s:10:"methodName";s:17:"generateClassName";s:9:"signature";s:73:"generateClassName(string $type, string $className, string $prefix): array";s:10:"visibility";s:7:"private";s:9:"startLine";i:795;s:7:"endLine";i:825;s:3:"ccn";i:4;}s:34:"generateTestDoubleClassDeclaration";a:6:{s:10:"methodName";s:34:"generateTestDoubleClassDeclaration";s:9:"signature";s:130:"generateTestDoubleClassDeclaration(bool $mockObject, array $mockClassName, bool $isInterface, array $additionalInterfaces): string";s:10:"visibility";s:7:"private";s:9:"startLine";i:827;s:7:"endLine";i:865;s:3:"ccn";i:6;}s:18:"canMethodBeDoubled";a:6:{s:10:"methodName";s:18:"canMethodBeDoubled";s:9:"signature";s:50:"canMethodBeDoubled(ReflectionMethod $method): bool";s:10:"visibility";s:7:"private";s:9:"startLine";i:867;s:7:"endLine";i:886;s:3:"ccn";i:5;}s:20:"isMethodNameExcluded";a:6:{s:10:"methodName";s:20:"isMethodNameExcluded";s:9:"signature";s:40:"isMethodNameExcluded(string $name): bool";s:10:"visibility";s:7:"private";s:9:"startLine";i:888;s:7:"endLine";i:891;s:3:"ccn";i:1;}s:15:"ensureKnownType";a:6:{s:10:"methodName";s:15:"ensureKnownType";s:9:"signature";s:55:"ensureKnownType(string $type, bool $callAutoload): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:896;s:7:"endLine";i:901;s:3:"ccn";i:3;}s:18:"ensureValidMethods";a:6:{s:10:"methodName";s:18:"ensureValidMethods";s:9:"signature";s:41:"ensureValidMethods(?array $methods): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:907;s:7:"endLine";i:922;s:3:"ccn";i:5;}s:36:"ensureMockedClassDoesNotAlreadyExist";a:6:{s:10:"methodName";s:36:"ensureMockedClassDoesNotAlreadyExist";s:9:"signature";s:65:"ensureMockedClassDoesNotAlreadyExist(string $mockClassName): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:928;s:7:"endLine";i:937;s:3:"ccn";i:4;}s:11:"instantiate";a:6:{s:10:"methodName";s:11:"instantiate";s:9:"signature";s:87:"instantiate(string $className, bool $callOriginalConstructor, array $arguments): object";s:10:"visibility";s:7:"private";s:9:"startLine";i:944;s:7:"endLine";i:975;s:3:"ccn";i:5;}s:22:"instantiateProxyTarget";a:6:{s:10:"methodName";s:22:"instantiateProxyTarget";s:9:"signature";s:98:"instantiateProxyTarget(?object $proxyTarget, object $object, string $type, array $arguments): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:982;s:7:"endLine";i:1007;s:3:"ccn";i:4;}s:12:"reflectClass";a:6:{s:10:"methodName";s:12:"reflectClass";s:9:"signature";s:48:"reflectClass(string $className): ReflectionClass";s:10:"visibility";s:7:"private";s:9:"startLine";i:1014;s:7:"endLine";i:1029;s:3:"ccn";i:2;}s:16:"namesOfMethodsIn";a:6:{s:10:"methodName";s:16:"namesOfMethodsIn";s:9:"signature";s:53:"namesOfMethodsIn(string $classOrInterfaceName): array";s:10:"visibility";s:7:"private";s:9:"startLine";i:1038;s:7:"endLine";i:1050;s:3:"ccn";i:4;}s:16:"interfaceMethods";a:6:{s:10:"methodName";s:16:"interfaceMethods";s:9:"signature";s:68:"interfaceMethods(string $interfaceName, bool $cloneArguments): array";s:10:"visibility";s:7:"private";s:9:"startLine";i:1059;s:7:"endLine";i:1069;s:3:"ccn";i:2;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:1071;s:18:"commentLinesOfCode";i:183;s:21:"nonCommentLinesOfCode";i:888;}s:15:"ignoredLinesFor";a:36:{i:0;i:67;i:1;i:953;i:2;i:954;i:3;i:955;i:4;i:956;i:5;i:957;i:6;i:958;i:7;i:959;i:8;i:960;i:9;i:961;i:10;i:966;i:11;i:967;i:12;i:968;i:13;i:969;i:14;i:970;i:15;i:971;i:16;i:972;i:17;i:973;i:18;i:994;i:19;i:995;i:20;i:996;i:21;i:997;i:22;i:998;i:23;i:999;i:24;i:1000;i:25;i:1001;i:26;i:1002;i:27;i:1018;i:28;i:1019;i:29;i:1020;i:30;i:1021;i:31;i:1022;i:32;i:1023;i:33;i:1024;i:34;i:1025;i:35;i:1026;}s:17:"executableLinesIn";a:488:{i:108;i:5;i:109;i:6;i:112;i:7;i:113;i:8;i:116;i:9;i:117;i:10;i:119;i:11;i:120;i:12;i:123;i:13;i:124;i:13;i:125;i:13;i:126;i:13;i:127;i:13;i:128;i:13;i:129;i:13;i:130;i:13;i:131;i:13;i:132;i:13;i:134;i:14;i:135;i:14;i:136;i:14;i:137;i:14;i:138;i:14;i:139;i:14;i:140;i:14;i:141;i:14;i:142;i:14;i:144;i:15;i:146;i:16;i:147;i:17;i:149;i:18;i:152;i:19;i:163;i:20;i:164;i:21;i:167;i:22;i:168;i:23;i:169;i:24;i:173;i:25;i:175;i:26;i:177;i:27;i:178;i:28;i:181;i:29;i:182;i:30;i:185;i:31;i:187;i:32;i:188;i:33;i:189;i:34;i:192;i:35;i:200;i:36;i:195;i:37;i:196;i:37;i:197;i:37;i:198;i:37;i:199;i:37;i:202;i:38;i:204;i:39;i:205;i:39;i:206;i:39;i:207;i:39;i:208;i:39;i:209;i:39;i:211;i:40;i:213;i:41;i:239;i:43;i:240;i:44;i:241;i:45;i:242;i:46;i:244;i:47;i:245;i:48;i:246;i:49;i:250;i:50;i:251;i:51;i:254;i:52;i:255;i:52;i:256;i:52;i:257;i:52;i:258;i:52;i:259;i:52;i:260;i:52;i:261;i:52;i:262;i:52;i:263;i:52;i:264;i:52;i:266;i:53;i:267;i:54;i:269;i:55;i:272;i:56;i:300;i:58;i:301;i:59;i:304;i:60;i:305;i:60;i:306;i:60;i:307;i:60;i:308;i:60;i:310;i:61;i:312;i:62;i:313;i:62;i:314;i:62;i:315;i:62;i:316;i:62;i:317;i:62;i:318;i:62;i:320;i:63;i:321;i:64;i:323;i:65;i:339;i:67;i:340;i:68;i:343;i:69;i:344;i:69;i:345;i:69;i:346;i:69;i:347;i:69;i:349;i:70;i:351;i:71;i:352;i:71;i:353;i:71;i:354;i:71;i:355;i:71;i:356;i:71;i:357;i:71;i:359;i:72;i:360;i:72;i:361;i:72;i:362;i:72;i:363;i:72;i:364;i:72;i:365;i:72;i:366;i:72;i:367;i:72;i:383;i:73;i:384;i:74;i:385;i:74;i:386;i:74;i:387;i:74;i:388;i:74;i:389;i:74;i:390;i:74;i:391;i:74;i:392;i:74;i:393;i:74;i:396;i:75;i:397;i:75;i:398;i:75;i:399;i:75;i:400;i:75;i:401;i:75;i:402;i:75;i:403;i:75;i:405;i:76;i:406;i:77;i:407;i:77;i:408;i:77;i:409;i:77;i:410;i:77;i:411;i:77;i:412;i:77;i:413;i:77;i:414;i:77;i:415;i:77;i:418;i:78;i:429;i:80;i:430;i:81;i:433;i:82;i:436;i:83;i:437;i:84;i:439;i:85;i:440;i:86;i:445;i:88;i:441;i:88;i:442;i:88;i:443;i:88;i:444;i:88;i:448;i:89;i:450;i:90;i:451;i:91;i:453;i:92;i:454;i:93;i:456;i:94;i:457;i:95;i:458;i:96;i:459;i:97;i:461;i:98;i:462;i:99;i:463;i:99;i:464;i:99;i:465;i:99;i:467;i:100;i:468;i:101;i:470;i:102;i:471;i:103;i:474;i:104;i:477;i:105;i:478;i:105;i:479;i:105;i:480;i:105;i:481;i:105;i:482;i:105;i:484;i:106;i:488;i:107;i:490;i:108;i:491;i:109;i:494;i:110;i:496;i:111;i:497;i:112;i:499;i:113;i:500;i:114;i:501;i:115;i:502;i:116;i:505;i:117;i:506;i:117;i:507;i:117;i:508;i:117;i:509;i:117;i:510;i:117;i:511;i:117;i:512;i:117;i:513;i:117;i:515;i:118;i:525;i:119;i:526;i:120;i:528;i:121;i:529;i:122;i:530;i:123;i:534;i:124;i:546;i:125;i:547;i:126;i:549;i:127;i:550;i:128;i:551;i:129;i:554;i:130;i:557;i:131;i:566;i:133;i:567;i:134;i:569;i:135;i:570;i:136;i:573;i:137;i:574;i:138;i:577;i:139;i:589;i:140;i:590;i:141;i:591;i:142;i:592;i:143;i:593;i:144;i:594;i:145;i:595;i:146;i:596;i:147;i:597;i:148;i:599;i:149;i:600;i:149;i:601;i:149;i:602;i:149;i:603;i:149;i:605;i:150;i:606;i:151;i:607;i:152;i:608;i:153;i:611;i:154;i:612;i:155;i:614;i:156;i:615;i:157;i:616;i:157;i:617;i:157;i:619;i:158;i:622;i:159;i:624;i:160;i:626;i:161;i:627;i:162;i:630;i:163;i:631;i:164;i:634;i:165;i:635;i:166;i:639;i:167;i:640;i:168;i:641;i:169;i:642;i:170;i:643;i:171;i:645;i:172;i:646;i:173;i:648;i:174;i:649;i:175;i:651;i:176;i:652;i:177;i:656;i:178;i:657;i:178;i:658;i:178;i:661;i:179;i:662;i:179;i:663;i:179;i:664;i:179;i:665;i:179;i:669;i:180;i:670;i:181;i:671;i:182;i:672;i:183;i:674;i:184;i:675;i:184;i:676;i:184;i:679;i:185;i:680;i:186;i:682;i:187;i:683;i:188;i:684;i:189;i:686;i:190;i:690;i:191;i:694;i:192;i:695;i:193;i:696;i:193;i:697;i:193;i:700;i:194;i:701;i:195;i:702;i:195;i:703;i:195;i:706;i:196;i:707;i:197;i:708;i:198;i:709;i:199;i:711;i:200;i:712;i:201;i:713;i:201;i:714;i:201;i:717;i:202;i:718;i:202;i:719;i:202;i:720;i:202;i:721;i:202;i:722;i:202;i:723;i:202;i:728;i:203;i:729;i:204;i:731;i:205;i:732;i:206;i:734;i:207;i:735;i:207;i:736;i:207;i:737;i:207;i:738;i:207;i:739;i:207;i:743;i:208;i:745;i:209;i:746;i:210;i:749;i:211;i:750;i:212;i:753;i:213;i:754;i:214;i:757;i:215;i:758;i:216;i:761;i:217;i:763;i:218;i:764;i:219;i:765;i:219;i:766;i:219;i:767;i:219;i:770;i:220;i:772;i:221;i:773;i:221;i:774;i:221;i:775;i:221;i:776;i:221;i:777;i:221;i:778;i:221;i:779;i:221;i:780;i:221;i:781;i:221;i:782;i:221;i:783;i:221;i:784;i:221;i:785;i:221;i:786;i:221;i:788;i:222;i:789;i:222;i:790;i:222;i:791;i:222;i:792;i:222;i:797;i:223;i:798;i:224;i:801;i:225;i:803;i:226;i:804;i:227;i:805;i:228;i:806;i:229;i:808;i:230;i:809;i:231;i:812;i:232;i:816;i:233;i:814;i:234;i:815;i:234;i:819;i:235;i:820;i:235;i:821;i:235;i:822;i:235;i:823;i:235;i:824;i:235;i:829;i:237;i:830;i:238;i:832;i:239;i:835;i:240;i:836;i:241;i:838;i:242;i:839;i:243;i:840;i:243;i:841;i:243;i:842;i:243;i:843;i:243;i:845;i:244;i:846;i:245;i:848;i:246;i:849;i:247;i:852;i:248;i:855;i:249;i:856;i:249;i:857;i:249;i:858;i:249;i:859;i:249;i:860;i:249;i:861;i:249;i:864;i:250;i:869;i:251;i:870;i:252;i:873;i:253;i:874;i:254;i:877;i:255;i:878;i:256;i:881;i:257;i:882;i:258;i:885;i:259;i:890;i:260;i:898;i:261;i:899;i:262;i:909;i:263;i:910;i:264;i:913;i:265;i:914;i:266;i:915;i:267;i:919;i:268;i:920;i:269;i:930;i:270;i:931;i:271;i:933;i:272;i:934;i:273;i:946;i:274;i:947;i:275;i:948;i:276;i:952;i:277;i:954;i:278;i:959;i:280;i:955;i:280;i:956;i:280;i:957;i:280;i:958;i:280;i:965;i:281;i:967;i:282;i:972;i:284;i:968;i:284;i:969;i:284;i:970;i:284;i:971;i:284;i:984;i:285;i:985;i:286;i:987;i:287;i:988;i:288;i:990;i:289;i:993;i:290;i:995;i:291;i:1000;i:293;i:996;i:293;i:997;i:293;i:998;i:293;i:999;i:293;i:1006;i:294;i:1017;i:295;i:1019;i:296;i:1024;i:298;i:1020;i:298;i:1021;i:298;i:1022;i:298;i:1023;i:298;i:1028;i:299;i:1040;i:300;i:1041;i:301;i:1043;i:302;i:1044;i:303;i:1045;i:304;i:1049;i:305;i:1061;i:306;i:1062;i:307;i:1064;i:308;i:1065;i:309;i:1068;i:310;}}