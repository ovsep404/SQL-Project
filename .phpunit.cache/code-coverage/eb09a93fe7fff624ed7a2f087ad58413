a:6:{s:9:"classesIn";a:1:{s:47:"SebastianBergmann\Comparator\DateTimeComparator";a:6:{s:4:"name";s:18:"DateTimeComparator";s:14:"namespacedName";s:47:"SebastianBergmann\Comparator\DateTimeComparator";s:9:"namespace";s:28:"SebastianBergmann\Comparator";s:9:"startLine";i:20;s:7:"endLine";i:73;s:7:"methods";a:3:{s:7:"accepts";a:6:{s:10:"methodName";s:7:"accepts";s:9:"signature";s:45:"accepts(mixed $expected, mixed $actual): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:22;s:7:"endLine";i:26;s:3:"ccn";i:2;}s:12:"assertEquals";a:6:{s:10:"methodName";s:12:"assertEquals";s:9:"signature";s:120:"assertEquals(mixed $expected, mixed $actual, float $delta, bool $canonicalize, bool $ignoreCase, array $processed): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:31;s:7:"endLine";i:60;s:3:"ccn";i:3;}s:16:"dateTimeToString";a:6:{s:10:"methodName";s:16:"dateTimeToString";s:9:"signature";s:53:"dateTimeToString(DateTimeInterface $datetime): string";s:10:"visibility";s:7:"private";s:9:"startLine";i:67;s:7:"endLine";i:72;s:3:"ccn";i:2;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:74;s:18:"commentLinesOfCode";i:16;s:21:"nonCommentLinesOfCode";i:58;}s:15:"ignoredLinesFor";a:1:{i:0;i:20;}s:17:"executableLinesIn";a:25:{i:24;i:1;i:25;i:1;i:33;i:3;i:34;i:4;i:36;i:5;i:37;i:6;i:38;i:7;i:40;i:8;i:41;i:8;i:43;i:9;i:44;i:9;i:45;i:9;i:47;i:10;i:48;i:10;i:49;i:10;i:51;i:11;i:58;i:13;i:52;i:13;i:53;i:13;i:54;i:13;i:55;i:13;i:56;i:13;i:57;i:13;i:69;i:14;i:71;i:15;}}