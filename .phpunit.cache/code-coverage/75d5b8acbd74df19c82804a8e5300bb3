a:6:{s:9:"classesIn";a:1:{s:46:"SebastianBergmann\Comparator\DOMNodeComparator";a:6:{s:4:"name";s:17:"DOMNodeComparator";s:14:"namespacedName";s:46:"SebastianBergmann\Comparator\DOMNodeComparator";s:9:"namespace";s:28:"SebastianBergmann\Comparator";s:9:"startLine";i:19;s:7:"endLine";i:80;s:7:"methods";a:3:{s:7:"accepts";a:6:{s:10:"methodName";s:7:"accepts";s:9:"signature";s:45:"accepts(mixed $expected, mixed $actual): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:21;s:7:"endLine";i:24;s:3:"ccn";i:2;}s:12:"assertEquals";a:6:{s:10:"methodName";s:12:"assertEquals";s:9:"signature";s:120:"assertEquals(mixed $expected, mixed $actual, float $delta, bool $canonicalize, bool $ignoreCase, array $processed): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:29;s:7:"endLine";i:48;s:3:"ccn";i:3;}s:10:"nodeToText";a:6:{s:10:"methodName";s:10:"nodeToText";s:9:"signature";s:71:"nodeToText(DOMNode $node, bool $canonicalize, bool $ignoreCase): string";s:10:"visibility";s:7:"private";s:9:"startLine";i:54;s:7:"endLine";i:79;s:3:"ccn";i:6;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:81;s:18:"commentLinesOfCode";i:15;s:21:"nonCommentLinesOfCode";i:66;}s:15:"ignoredLinesFor";a:1:{i:0;i:19;}s:17:"executableLinesIn";a:26:{i:23;i:1;i:31;i:3;i:32;i:4;i:34;i:5;i:35;i:6;i:37;i:7;i:38;i:8;i:46;i:10;i:40;i:10;i:41;i:10;i:42;i:10;i:43;i:10;i:44;i:10;i:45;i:10;i:56;i:11;i:57;i:12;i:60;i:13;i:62;i:14;i:64;i:15;i:65;i:16;i:68;i:17;i:71;i:18;i:73;i:19;i:74;i:20;i:76;i:21;i:78;i:22;}}