a:6:{s:9:"classesIn";a:1:{s:39:"SebastianBergmann\Type\IntersectionType";a:6:{s:4:"name";s:16:"IntersectionType";s:14:"namespacedName";s:39:"SebastianBergmann\Type\IntersectionType";s:9:"namespace";s:22:"SebastianBergmann\Type";s:9:"startLine";i:18;s:7:"endLine";i:126;s:7:"methods";a:10:{s:11:"__construct";a:6:{s:10:"methodName";s:11:"__construct";s:9:"signature";s:47:"__construct(SebastianBergmann\Type\Type $types)";s:10:"visibility";s:6:"public";s:9:"startLine";i:28;s:7:"endLine";i:35;s:3:"ccn";i:1;}s:12:"isAssignable";a:6:{s:10:"methodName";s:12:"isAssignable";s:9:"signature";s:54:"isAssignable(SebastianBergmann\Type\Type $other): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:37;s:7:"endLine";i:40;s:3:"ccn";i:1;}s:8:"asString";a:6:{s:10:"methodName";s:8:"asString";s:9:"signature";s:18:"asString(): string";s:10:"visibility";s:6:"public";s:9:"startLine";i:42;s:7:"endLine";i:45;s:3:"ccn";i:1;}s:4:"name";a:6:{s:10:"methodName";s:4:"name";s:9:"signature";s:14:"name(): string";s:10:"visibility";s:6:"public";s:9:"startLine";i:47;s:7:"endLine";i:58;s:3:"ccn";i:2;}s:10:"allowsNull";a:6:{s:10:"methodName";s:10:"allowsNull";s:9:"signature";s:18:"allowsNull(): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:60;s:7:"endLine";i:63;s:3:"ccn";i:1;}s:14:"isIntersection";a:6:{s:10:"methodName";s:14:"isIntersection";s:9:"signature";s:22:"isIntersection(): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:68;s:7:"endLine";i:71;s:3:"ccn";i:1;}s:5:"types";a:6:{s:10:"methodName";s:5:"types";s:9:"signature";s:14:"types(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:76;s:7:"endLine";i:79;s:3:"ccn";i:1;}s:23:"ensureMinimumOfTwoTypes";a:6:{s:10:"methodName";s:23:"ensureMinimumOfTwoTypes";s:9:"signature";s:65:"ensureMinimumOfTwoTypes(SebastianBergmann\Type\Type $types): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:84;s:7:"endLine";i:91;s:3:"ccn";i:2;}s:20:"ensureOnlyValidTypes";a:6:{s:10:"methodName";s:20:"ensureOnlyValidTypes";s:9:"signature";s:62:"ensureOnlyValidTypes(SebastianBergmann\Type\Type $types): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:96;s:7:"endLine";i:105;s:3:"ccn";i:3;}s:22:"ensureNoDuplicateTypes";a:6:{s:10:"methodName";s:22:"ensureNoDuplicateTypes";s:9:"signature";s:64:"ensureNoDuplicateTypes(SebastianBergmann\Type\Type $types): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:110;s:7:"endLine";i:125;s:3:"ccn";i:3;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:127;s:18:"commentLinesOfCode";i:29;s:21:"nonCommentLinesOfCode";i:98;}s:15:"ignoredLinesFor";a:1:{i:0;i:18;}s:17:"executableLinesIn";a:30:{i:30;i:2;i:31;i:3;i:32;i:4;i:34;i:5;i:39;i:6;i:44;i:7;i:49;i:8;i:51;i:9;i:52;i:10;i:55;i:11;i:57;i:12;i:62;i:13;i:70;i:14;i:78;i:15;i:86;i:16;i:89;i:18;i:87;i:18;i:88;i:18;i:98;i:19;i:99;i:20;i:102;i:22;i:100;i:22;i:101;i:22;i:112;i:23;i:114;i:24;i:115;i:25;i:117;i:26;i:119;i:27;i:120;i:28;i:123;i:29;}}