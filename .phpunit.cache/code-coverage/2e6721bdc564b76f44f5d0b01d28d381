a:6:{s:9:"classesIn";a:1:{s:36:"PHPUnit\Framework\MockObject\Matcher";a:6:{s:4:"name";s:7:"Matcher";s:14:"namespacedName";s:36:"PHPUnit\Framework\MockObject\Matcher";s:9:"namespace";s:28:"PHPUnit\Framework\MockObject";s:9:"startLine";i:27;s:7:"endLine";i:210;s:7:"methods";a:12:{s:11:"__construct";a:6:{s:10:"methodName";s:11:"__construct";s:9:"signature";s:68:"__construct(PHPUnit\Framework\MockObject\Rule\InvocationOrder $rule)";s:10:"visibility";s:6:"public";s:9:"startLine";i:35;s:7:"endLine";i:38;s:3:"ccn";i:1;}s:11:"hasMatchers";a:6:{s:10:"methodName";s:11:"hasMatchers";s:9:"signature";s:19:"hasMatchers(): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:40;s:7:"endLine";i:43;s:3:"ccn";i:1;}s:17:"hasMethodNameRule";a:6:{s:10:"methodName";s:17:"hasMethodNameRule";s:9:"signature";s:25:"hasMethodNameRule(): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:45;s:7:"endLine";i:48;s:3:"ccn";i:1;}s:14:"methodNameRule";a:6:{s:10:"methodName";s:14:"methodNameRule";s:9:"signature";s:62:"methodNameRule(): PHPUnit\Framework\MockObject\Rule\MethodName";s:10:"visibility";s:6:"public";s:9:"startLine";i:50;s:7:"endLine";i:53;s:3:"ccn";i:1;}s:17:"setMethodNameRule";a:6:{s:10:"methodName";s:17:"setMethodNameRule";s:9:"signature";s:75:"setMethodNameRule(PHPUnit\Framework\MockObject\Rule\MethodName $rule): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:55;s:7:"endLine";i:58;s:3:"ccn";i:1;}s:17:"hasParametersRule";a:6:{s:10:"methodName";s:17:"hasParametersRule";s:9:"signature";s:25:"hasParametersRule(): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:60;s:7:"endLine";i:63;s:3:"ccn";i:1;}s:17:"setParametersRule";a:6:{s:10:"methodName";s:17:"setParametersRule";s:9:"signature";s:79:"setParametersRule(PHPUnit\Framework\MockObject\Rule\ParametersRule $rule): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:65;s:7:"endLine";i:68;s:3:"ccn";i:1;}s:7:"setStub";a:6:{s:10:"methodName";s:7:"setStub";s:9:"signature";s:59:"setStub(PHPUnit\Framework\MockObject\Stub\Stub $stub): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:70;s:7:"endLine";i:73;s:3:"ccn";i:1;}s:22:"setAfterMatchBuilderId";a:6:{s:10:"methodName";s:22:"setAfterMatchBuilderId";s:9:"signature";s:40:"setAfterMatchBuilderId(string $id): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:75;s:7:"endLine";i:78;s:3:"ccn";i:1;}s:7:"invoked";a:6:{s:10:"methodName";s:7:"invoked";s:9:"signature";s:67:"invoked(PHPUnit\Framework\MockObject\Invocation $invocation): mixed";s:10:"visibility";s:6:"public";s:9:"startLine";i:87;s:7:"endLine";i:124;s:3:"ccn";i:6;}s:7:"matches";a:6:{s:10:"methodName";s:7:"matches";s:9:"signature";s:66:"matches(PHPUnit\Framework\MockObject\Invocation $invocation): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:132;s:7:"endLine";i:173;s:3:"ccn";i:8;}s:6:"verify";a:6:{s:10:"methodName";s:6:"verify";s:9:"signature";s:14:"verify(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:179;s:7:"endLine";i:209;s:3:"ccn";i:8;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:211;s:18:"commentLinesOfCode";i:28;s:21:"nonCommentLinesOfCode";i:183;}s:15:"ignoredLinesFor";a:1:{i:0;i:27;}s:17:"executableLinesIn";a:76:{i:37;i:6;i:42;i:7;i:47;i:8;i:52;i:9;i:57;i:10;i:62;i:11;i:67;i:12;i:72;i:13;i:77;i:14;i:89;i:15;i:90;i:16;i:93;i:17;i:94;i:18;i:95;i:18;i:96;i:18;i:98;i:19;i:99;i:20;i:103;i:21;i:106;i:22;i:107;i:23;i:116;i:25;i:108;i:25;i:109;i:25;i:110;i:25;i:111;i:25;i:112;i:25;i:113;i:25;i:114;i:25;i:115;i:25;i:119;i:26;i:120;i:27;i:123;i:28;i:134;i:29;i:135;i:30;i:136;i:30;i:137;i:30;i:139;i:31;i:140;i:32;i:143;i:33;i:144;i:34;i:148;i:35;i:149;i:36;i:152;i:37;i:153;i:38;i:157;i:39;i:158;i:40;i:160;i:41;i:169;i:43;i:161;i:43;i:162;i:43;i:163;i:43;i:164;i:43;i:165;i:43;i:166;i:43;i:167;i:43;i:168;i:43;i:172;i:44;i:181;i:45;i:182;i:46;i:186;i:47;i:188;i:48;i:189;i:49;i:192;i:50;i:193;i:51;i:194;i:52;i:196;i:53;i:197;i:54;i:199;i:55;i:207;i:57;i:200;i:57;i:201;i:57;i:202;i:57;i:203;i:57;i:204;i:57;i:205;i:57;i:206;i:57;}}