a:6:{s:9:"classesIn";a:1:{s:39:"SebastianBergmann\Complexity\Complexity";a:6:{s:4:"name";s:10:"Complexity";s:14:"namespacedName";s:39:"SebastianBergmann\Complexity\Complexity";s:9:"namespace";s:28:"SebastianBergmann\Complexity";s:9:"startLine";i:17;s:7:"endLine";i:64;s:7:"methods";a:5:{s:11:"__construct";a:6:{s:10:"methodName";s:11:"__construct";s:9:"signature";s:52:"__construct(string $name, int $cyclomaticComplexity)";s:10:"visibility";s:6:"public";s:9:"startLine";i:33;s:7:"endLine";i:37;s:3:"ccn";i:1;}s:4:"name";a:6:{s:10:"methodName";s:4:"name";s:9:"signature";s:14:"name(): string";s:10:"visibility";s:6:"public";s:9:"startLine";i:42;s:7:"endLine";i:45;s:3:"ccn";i:1;}s:20:"cyclomaticComplexity";a:6:{s:10:"methodName";s:20:"cyclomaticComplexity";s:9:"signature";s:27:"cyclomaticComplexity(): int";s:10:"visibility";s:6:"public";s:9:"startLine";i:50;s:7:"endLine";i:53;s:3:"ccn";i:1;}s:10:"isFunction";a:6:{s:10:"methodName";s:10:"isFunction";s:9:"signature";s:18:"isFunction(): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:55;s:7:"endLine";i:58;s:3:"ccn";i:1;}s:8:"isMethod";a:6:{s:10:"methodName";s:8:"isMethod";s:9:"signature";s:16:"isMethod(): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:60;s:7:"endLine";i:63;s:3:"ccn";i:1;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:65;s:18:"commentLinesOfCode";i:27;s:21:"nonCommentLinesOfCode";i:38;}s:15:"ignoredLinesFor";a:1:{i:0;i:17;}s:17:"executableLinesIn";a:6:{i:35;i:3;i:36;i:4;i:44;i:5;i:52;i:6;i:57;i:7;i:62;i:8;}}