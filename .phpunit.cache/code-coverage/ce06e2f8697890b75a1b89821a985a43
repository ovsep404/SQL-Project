a:6:{s:9:"classesIn";a:1:{s:32:"SebastianBergmann\Type\UnionType";a:6:{s:4:"name";s:9:"UnionType";s:14:"namespacedName";s:32:"SebastianBergmann\Type\UnionType";s:9:"namespace";s:22:"SebastianBergmann\Type";s:9:"startLine";i:16;s:7:"endLine";i:138;s:7:"methods";a:10:{s:11:"__construct";a:6:{s:10:"methodName";s:11:"__construct";s:9:"signature";s:47:"__construct(SebastianBergmann\Type\Type $types)";s:10:"visibility";s:6:"public";s:9:"startLine";i:26;s:7:"endLine";i:32;s:3:"ccn";i:1;}s:12:"isAssignable";a:6:{s:10:"methodName";s:12:"isAssignable";s:9:"signature";s:54:"isAssignable(SebastianBergmann\Type\Type $other): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:34;s:7:"endLine";i:43;s:3:"ccn";i:3;}s:8:"asString";a:6:{s:10:"methodName";s:8:"asString";s:9:"signature";s:18:"asString(): string";s:10:"visibility";s:6:"public";s:9:"startLine";i:45;s:7:"endLine";i:48;s:3:"ccn";i:1;}s:4:"name";a:6:{s:10:"methodName";s:4:"name";s:9:"signature";s:14:"name(): string";s:10:"visibility";s:6:"public";s:9:"startLine";i:50;s:7:"endLine";i:67;s:3:"ccn";i:3;}s:10:"allowsNull";a:6:{s:10:"methodName";s:10:"allowsNull";s:9:"signature";s:18:"allowsNull(): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:69;s:7:"endLine";i:78;s:3:"ccn";i:3;}s:7:"isUnion";a:6:{s:10:"methodName";s:7:"isUnion";s:9:"signature";s:15:"isUnion(): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:83;s:7:"endLine";i:86;s:3:"ccn";i:1;}s:25:"containsIntersectionTypes";a:6:{s:10:"methodName";s:25:"containsIntersectionTypes";s:9:"signature";s:33:"containsIntersectionTypes(): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:88;s:7:"endLine";i:97;s:3:"ccn";i:3;}s:5:"types";a:6:{s:10:"methodName";s:5:"types";s:9:"signature";s:14:"types(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:102;s:7:"endLine";i:105;s:3:"ccn";i:1;}s:23:"ensureMinimumOfTwoTypes";a:6:{s:10:"methodName";s:23:"ensureMinimumOfTwoTypes";s:9:"signature";s:65:"ensureMinimumOfTwoTypes(SebastianBergmann\Type\Type $types): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:110;s:7:"endLine";i:117;s:3:"ccn";i:2;}s:20:"ensureOnlyValidTypes";a:6:{s:10:"methodName";s:20:"ensureOnlyValidTypes";s:9:"signature";s:62:"ensureOnlyValidTypes(SebastianBergmann\Type\Type $types): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:122;s:7:"endLine";i:137;s:3:"ccn";i:4;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:139;s:18:"commentLinesOfCode";i:26;s:21:"nonCommentLinesOfCode";i:113;}s:15:"ignoredLinesFor";a:1:{i:0;i:16;}s:17:"executableLinesIn";a:39:{i:28;i:2;i:29;i:3;i:31;i:4;i:36;i:5;i:37;i:6;i:38;i:7;i:42;i:8;i:47;i:9;i:52;i:10;i:54;i:11;i:55;i:12;i:56;i:13;i:58;i:14;i:61;i:15;i:64;i:16;i:66;i:17;i:71;i:18;i:72;i:19;i:73;i:20;i:77;i:21;i:85;i:22;i:90;i:23;i:91;i:24;i:92;i:25;i:96;i:26;i:104;i:27;i:112;i:28;i:115;i:30;i:113;i:30;i:114;i:30;i:124;i:31;i:125;i:32;i:128;i:34;i:126;i:34;i:127;i:34;i:131;i:35;i:134;i:37;i:132;i:37;i:133;i:37;}}