a:6:{s:9:"classesIn";a:1:{s:49:"PHPUnit\Framework\MockObject\Generator\MockMethod";a:6:{s:4:"name";s:10:"MockMethod";s:14:"namespacedName";s:49:"PHPUnit\Framework\MockObject\Generator\MockMethod";s:9:"namespace";s:38:"PHPUnit\Framework\MockObject\Generator";s:9:"startLine";i:35;s:7:"endLine";i:385;s:7:"methods";a:12:{s:14:"fromReflection";a:6:{s:10:"methodName";s:14:"fromReflection";s:9:"signature";s:94:"fromReflection(ReflectionMethod $method, bool $callOriginalMethod, bool $cloneArguments): self";s:10:"visibility";s:6:"public";s:9:"startLine";i:72;s:7:"endLine";i:116;s:3:"ccn";i:7;}s:8:"fromName";a:6:{s:10:"methodName";s:8:"fromName";s:9:"signature";s:75:"fromName(string $className, string $methodName, bool $cloneArguments): self";s:10:"visibility";s:6:"public";s:9:"startLine";i:122;s:7:"endLine";i:139;s:3:"ccn";i:1;}s:11:"__construct";a:6:{s:10:"methodName";s:11:"__construct";s:9:"signature";s:327:"__construct(string $className, string $methodName, bool $cloneArguments, string $modifier, string $argumentsForDeclaration, string $argumentsForCall, array $defaultParameterValues, int $numberOfParameters, SebastianBergmann\Type\Type $returnType, string $reference, bool $callOriginalMethod, bool $static, ?string $deprecation)";s:10:"visibility";s:7:"private";s:9:"startLine";i:147;s:7:"endLine";i:162;s:3:"ccn";i:1;}s:10:"methodName";a:6:{s:10:"methodName";s:10:"methodName";s:9:"signature";s:20:"methodName(): string";s:10:"visibility";s:6:"public";s:9:"startLine";i:167;s:7:"endLine";i:170;s:3:"ccn";i:1;}s:12:"generateCode";a:6:{s:10:"methodName";s:12:"generateCode";s:9:"signature";s:22:"generateCode(): string";s:10:"visibility";s:6:"public";s:9:"startLine";i:175;s:7:"endLine";i:230;s:3:"ccn";i:9;}s:10:"returnType";a:6:{s:10:"methodName";s:10:"returnType";s:9:"signature";s:41:"returnType(): SebastianBergmann\Type\Type";s:10:"visibility";s:6:"public";s:9:"startLine";i:232;s:7:"endLine";i:235;s:3:"ccn";i:1;}s:22:"defaultParameterValues";a:6:{s:10:"methodName";s:22:"defaultParameterValues";s:9:"signature";s:31:"defaultParameterValues(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:240;s:7:"endLine";i:243;s:3:"ccn";i:1;}s:18:"numberOfParameters";a:6:{s:10:"methodName";s:18:"numberOfParameters";s:9:"signature";s:25:"numberOfParameters(): int";s:10:"visibility";s:6:"public";s:9:"startLine";i:248;s:7:"endLine";i:251;s:3:"ccn";i:1;}s:30:"methodParametersForDeclaration";a:6:{s:10:"methodName";s:30:"methodParametersForDeclaration";s:9:"signature";s:64:"methodParametersForDeclaration(ReflectionMethod $method): string";s:10:"visibility";s:7:"private";s:9:"startLine";i:258;s:7:"endLine";i:297;s:3:"ccn";i:9;}s:23:"methodParametersForCall";a:6:{s:10:"methodName";s:23:"methodParametersForCall";s:9:"signature";s:57:"methodParametersForCall(ReflectionMethod $method): string";s:10:"visibility";s:7:"private";s:9:"startLine";i:304;s:7:"endLine";i:330;s:3:"ccn";i:6;}s:18:"exportDefaultValue";a:6:{s:10:"methodName";s:18:"exportDefaultValue";s:9:"signature";s:58:"exportDefaultValue(ReflectionParameter $parameter): string";s:10:"visibility";s:7:"private";s:9:"startLine";i:335;s:7:"endLine";i:366;s:3:"ccn";i:3;}s:29:"methodParametersDefaultValues";a:6:{s:10:"methodName";s:29:"methodParametersDefaultValues";s:9:"signature";s:62:"methodParametersDefaultValues(ReflectionMethod $method): array";s:10:"visibility";s:7:"private";s:9:"startLine";i:371;s:7:"endLine";i:384;s:3:"ccn";i:3;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:386;s:18:"commentLinesOfCode";i:73;s:21:"nonCommentLinesOfCode";i:313;}s:15:"ignoredLinesFor";a:10:{i:0;i:35;i:1;i:357;i:2;i:358;i:3;i:359;i:4;i:360;i:5;i:361;i:6;i:362;i:7;i:363;i:8;i:364;i:9;i:365;}s:17:"executableLinesIn";a:159:{i:74;i:15;i:75;i:16;i:76;i:17;i:77;i:18;i:79;i:19;i:82;i:20;i:83;i:21;i:86;i:22;i:87;i:23;i:89;i:24;i:92;i:25;i:94;i:26;i:95;i:27;i:96;i:28;i:98;i:29;i:101;i:30;i:102;i:30;i:103;i:30;i:104;i:30;i:105;i:30;i:106;i:30;i:107;i:30;i:108;i:30;i:109;i:30;i:110;i:30;i:111;i:30;i:112;i:30;i:113;i:30;i:114;i:30;i:115;i:30;i:124;i:31;i:125;i:31;i:126;i:31;i:127;i:31;i:128;i:31;i:129;i:31;i:130;i:31;i:131;i:31;i:132;i:31;i:133;i:31;i:134;i:31;i:135;i:31;i:136;i:31;i:137;i:31;i:138;i:31;i:149;i:32;i:150;i:33;i:151;i:34;i:152;i:35;i:153;i:36;i:154;i:37;i:155;i:38;i:156;i:39;i:157;i:40;i:158;i:41;i:159;i:42;i:160;i:43;i:161;i:44;i:169;i:45;i:177;i:46;i:178;i:47;i:180;i:48;i:181;i:48;i:182;i:48;i:183;i:48;i:186;i:49;i:187;i:50;i:189;i:51;i:190;i:52;i:194;i:52;i:197;i:53;i:198;i:54;i:199;i:55;i:201;i:56;i:202;i:56;i:203;i:56;i:204;i:56;i:205;i:56;i:207;i:57;i:210;i:58;i:212;i:59;i:213;i:59;i:214;i:59;i:215;i:59;i:216;i:59;i:217;i:59;i:218;i:59;i:219;i:59;i:220;i:59;i:221;i:59;i:222;i:59;i:223;i:59;i:224;i:59;i:225;i:59;i:226;i:59;i:227;i:59;i:229;i:60;i:234;i:61;i:242;i:62;i:250;i:63;i:260;i:64;i:261;i:65;i:263;i:66;i:264;i:67;i:269;i:68;i:270;i:69;i:273;i:70;i:274;i:71;i:275;i:72;i:277;i:73;i:278;i:74;i:281;i:75;i:282;i:76;i:285;i:77;i:286;i:78;i:287;i:79;i:288;i:80;i:289;i:81;i:290;i:82;i:293;i:83;i:296;i:84;i:306;i:85;i:308;i:86;i:309;i:87;i:314;i:88;i:315;i:89;i:318;i:90;i:319;i:91;i:322;i:92;i:323;i:93;i:325;i:94;i:329;i:95;i:338;i:96;i:340;i:97;i:341;i:98;i:344;i:99;i:346;i:100;i:347;i:100;i:348;i:100;i:349;i:100;i:350;i:100;i:351;i:100;i:352;i:100;i:353;i:100;i:354;i:100;i:355;i:100;i:356;i:100;i:358;i:101;i:363;i:103;i:359;i:103;i:360;i:103;i:361;i:103;i:362;i:103;i:373;i:104;i:375;i:105;i:376;i:106;i:377;i:107;i:380;i:108;i:383;i:109;}}